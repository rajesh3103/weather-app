#!/usr/bin/env python3
"""
Weather App - Environment Setup Script
This script helps you set up the required environment variables for authentication.
"""

import os
import sys

def create_env_file():
    """Create a .env file with the required environment variables"""
    
    print("üå¶Ô∏è  Weather App - Authentication Setup")
    print("=" * 50)
    print()
    
    # Check if .env already exists
    if os.path.exists('.env'):
        response = input("‚ö†Ô∏è  .env file already exists. Overwrite? (y/N): ")
        if response.lower() != 'y':
            print("Setup cancelled.")
            return
    
    print("Please provide the following configuration values:")
    print("(Press Enter to skip optional items)")
    print()
    
    # Weather API Key (required)
    print("1. Weather API Key (Required)")
    print("   Get your free API key from: https://weatherapi.com/")
    weather_api_key = input("   Enter your Weather API key: ").strip()
    
    while not weather_api_key:
        print("   ‚ö†Ô∏è  Weather API key is required!")
        weather_api_key = input("   Enter your Weather API key: ").strip()
    
    print("   ‚úì Weather API key configured")
    print()
    
    # Google Authentication (optional)
    print("2. Google Authentication (Optional)")
    print("   Get Client ID from: https://console.cloud.google.com/")
    print("   - Create/select a project")
    print("   - Enable Google+ API")
    print("   - Create OAuth 2.0 credentials")
    print("   - Add http://localhost:10000 to authorized origins")
    
    google_client_id = input("   Enter Google Client ID (optional): ").strip()
    
    if google_client_id:
        print("   ‚úì Google authentication configured")
    else:
        print("   ‚ö†Ô∏è  Google authentication will be disabled")
    print()
    
    # Firebase Configuration (optional)
    print("3. Firebase Configuration (Optional - for phone auth)")
    print("   Get config from: https://console.firebase.google.com/")
    print("   - Create/select a project")
    print("   - Enable Authentication > Phone")
    print("   - Get config from Project Settings")
    
    firebase_api_key = input("   Enter Firebase API key (optional): ").strip()
    firebase_auth_domain = ""
    firebase_project_id = ""
    
    if firebase_api_key:
        firebase_project_id = input("   Enter Firebase Project ID: ").strip()
        if firebase_project_id:
            firebase_auth_domain = f"{firebase_project_id}.firebaseapp.com"
            print("   ‚úì Firebase phone authentication configured")
    else:
        print("   ‚ö†Ô∏è  Phone authentication will be disabled")
    print()
    
    # Create .env file content
    env_content = f"""# Weather App Configuration
# Generated by setup_env.py

# Weather API Configuration (Required)
WEATHER_API_KEY={weather_api_key}

# Google Authentication Configuration (Optional)
GOOGLE_CLIENT_ID={google_client_id}

# Firebase Configuration (Optional - for phone authentication)
FIREBASE_API_KEY={firebase_api_key}
FIREBASE_AUTH_DOMAIN={firebase_auth_domain}
FIREBASE_PROJECT_ID={firebase_project_id}

# Setup Instructions:
# 1. Run: pip install -r requirements.txt
# 2. Run: python weather_app.py
# 3. Open: http://localhost:10000
"""
    
    # Write .env file
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        
        print("‚úì .env file created successfully!")
        print()
        print("Next steps:")
        print("1. Install dependencies: pip install -r requirements.txt")
        print("2. Run the app: python weather_app.py")
        print("3. Open your browser to: http://localhost:10000")
        print()
        
        # Check what authentication methods are available
        auth_methods = []
        if weather_api_key:
            auth_methods.append("Weather data")
        if google_client_id:
            auth_methods.append("Google sign-in")
        if firebase_api_key:
            auth_methods.append("Phone authentication")
        
        print("Available features:")
        for method in auth_methods:
            print(f"  ‚úì {method}")
        
        if not google_client_id and not firebase_api_key:
            print()
            print("‚ö†Ô∏è  No authentication methods configured!")
            print("   Your app will only show weather data without user accounts.")
            print("   To enable authentication, run this script again with proper credentials.")
        
    except Exception as e:
        print(f"‚ùå Error creating .env file: {e}")
        return False
    
    return True

def main():
    """Main function"""
    if len(sys.argv) > 1 and sys.argv[1] == '--help':
        print(__doc__)
        print("\nUsage: python setup_env.py")
        print("\nThis script will guide you through setting up authentication for the Weather App.")
        return
    
    try:
        create_env_file()
    except KeyboardInterrupt:
        print("\n\nSetup cancelled by user.")
    except Exception as e:
        print(f"\n‚ùå Setup failed: {e}")

if __name__ == '__main__':
    main() 